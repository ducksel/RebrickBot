# api_rebrickable.py

"""
–†–∞–±–æ—Ç–∞ —Å Rebrickable API:
- –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ LEGO-–Ω–∞–±–æ—Ä–µ
- –ó–∞–≥—Ä—É–∑–∫–∞ –≤—Å–µ—Ö –¥–µ—Ç–∞–ª–µ–π –Ω–∞–±–æ—Ä–∞
- –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –¥–µ—Ç–∞–ª–µ–π
"""

import os
import requests

# –ü–æ–ª—É—á–∞–µ–º API-–∫–ª—é—á Rebrickable –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
REBRICKABLE_API_KEY = os.environ["REBRICKABLE_API_KEY"]

# ============================
# üß± –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –Ω–∞–±–æ—Ä–µ
# ============================
def get_set_details(set_id):
	"""
	–ü–æ–ª—É—á–∞–µ—Ç –±–∞–∑–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞–±–æ—Ä–µ (–Ω–æ–º–µ—Ä, –∏–º—è, –≥–æ–¥ –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–µ—Ç–∞–ª–µ–π)
	–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ—Ä—Ç–µ–∂:
		(set_num, name, year, num_parts)
	–∏–ª–∏ ("n/a", ...) –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ.
	"""
	url = f"https://rebrickable.com/api/v3/lego/sets/{set_id}/"
	headers = {"Authorization": f"key {REBRICKABLE_API_KEY}"}
	response = requests.get(url, headers=headers)
	if response.status_code == 200:
		data = response.json()
		set_num = data.get("set_num", "n/a")
		name = data.get("name", "n/a")
		year = data.get("year", "n/a")
		num_parts = data.get("num_parts", "n/a")
		return set_num, name, year, num_parts
	return "n/a", "n/a", "n/a", "n/a"

# ============================
# üß© –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –¥–µ—Ç–∞–ª–µ–π –Ω–∞–±–æ—Ä–∞
# ============================
def get_all_parts(set_id):
	"""
	–ü–æ–ª—É—á–∞–µ—Ç –≤—Å–µ –¥–µ—Ç–∞–ª–∏ –Ω–∞–±–æ—Ä–∞, –æ–±—Ö–æ–¥—è –≤—Å–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã (pagination)
	–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤–∞—Ä–µ–π, –∫–∞–∂–¥—ã–π —Å–ª–æ–≤–∞—Ä—å –æ–ø–∏—Å—ã–≤–∞–µ—Ç –æ–¥–Ω—É –¥–µ—Ç–∞–ª—å.
	"""
	parts = []
	url = f"https://rebrickable.com/api/v3/lego/sets/{set_id}/parts/"
	headers = {"Authorization": f"key {REBRICKABLE_API_KEY}"}
	while url:
		response = requests.get(url, headers=headers)
		if response.status_code != 200:
			break
		data = response.json()
		parts.extend(data.get("results", []))
		url = data.get("next")
	return parts

# ============================
# üè∑ –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π –¥–µ—Ç–∞–ª–µ–π
# ============================
def get_categories():
	"""
	–ü–æ–ª—É—á–∞–µ—Ç –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–µ—Ç–∞–ª–µ–π –∏–∑ Rebrickable –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª–æ–≤–∞—Ä—å:
		{ category_id: category_name }
	–û–±—Ö–æ–¥–∏—Ç –≤—Å–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞.
	"""
	categories = {}
	url = "https://rebrickable.com/api/v3/lego/part_categories/"
	headers = {"Authorization": f"key {REBRICKABLE_API_KEY}"}
	while url:
		response = requests.get(url, headers=headers)
		if response.status_code != 200:
			break
		data = response.json()
		for cat in data.get("results", []):
			cat_id = cat.get("id")
			cat_name = cat.get("name")
			if cat_id is not None and cat_name is not None:
				categories[cat_id] = cat_name
		url = data.get("next")
	return categories
